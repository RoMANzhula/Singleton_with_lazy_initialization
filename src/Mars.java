public class Mars implements Planets {
    private static Mars INSTANCE; // створюємо приватну статичну змінну для Singleton - ШАБЛОН

    private Mars() {} // створюємо приватний конструктор цього класу, який не дозволяє створювати нові об'єкти
    // за межами цього класу (так би мовити реалізує можливість бути класу Singleton)

    public static Mars getInstance() { // публічний статичний метод, який повертає екземпляр класу, цей метод називають
        // getInstance - отримати екземпляр. Це глобальна точка доступу до екземпляру класу. Метод дозволяє виконати лінійне
        // завантаження
        if (INSTANCE == null) { // якщо шаблон не створений (не ініціалізований), то
            synchronized (Mars.class) { // виконуємо синхронізацію для потокобезпеки (при багатопоточності)
                if (INSTANCE == null) { // ще раз перевіряємо, що шаблон не створений (не ініціалізований)
                    INSTANCE = new Mars(); // ініціалізуємо його
                }
            }
        }
        return INSTANCE; // повертаємо ініціалізований шаблон
    }
}
